name: Hacktoberfest Spam Blocker

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  hacktoberfest-validation:
    runs-on: ubuntu-latest
    # Only run during Hacktoberfest period (October)
    if: github.event.pull_request.created_at >= '2025-10-01T00:00:00Z' && github.event.pull_request.created_at <= '2025-10-31T23:59:59Z'
    
    permissions:
      pull-requests: write
      contents: read
      issues: write

    steps:
      - name: Check for Hacktoberfest spam patterns
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const prTitle = context.payload.pull_request.title.toLowerCase();
            const prBody = (context.payload.pull_request.body || '').toLowerCase();
            
            // Common Hacktoberfest spam indicators
            const spamIndicators = [
              'hacktoberfest',
              'hactoberfest', // common typo
              'add my name',
              'added my name',
              'adding name',
              'update readme',
              'updated readme',
            ];
            
            const hasSpamIndicator = spamIndicators.some(indicator => 
              prTitle.includes(indicator) || prBody.includes(indicator)
            );
            
            // Get changed files
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            const onlyDocChanges = files.every(f => 
              f.filename.toLowerCase().endsWith('.md') || 
              f.filename.toLowerCase().endsWith('.txt')
            );
            
            const smallChanges = files.reduce((sum, f) => sum + f.changes, 0) < 10;
            
            // Flag if it matches multiple spam criteria
            if (hasSpamIndicator && onlyDocChanges && smallChanges) {
              // Add warning comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `## 🎃 Hacktoberfest Notice

This PR has been flagged for potential spam patterns. 

**Important:** 
- Spam PRs will be labeled as \`hacktoberfest-invalid\` and **won't count** toward Hacktoberfest
- Repeated spam can result in **disqualification from Hacktoberfest**
- Please ensure your contribution adds **real value** to the project

If this is a legitimate contribution, please add more details to your PR description explaining:
1. What problem does this solve?
2. Why is this change valuable?
3. How have you tested it?

A maintainer will review this shortly. Thank you! 🙏`
              });
              
              // Add label for manual review
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['needs-review', 'hacktoberfest']
              });
            }